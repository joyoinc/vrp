<!DOCTYPE html>
<html>
  <head>
  <meta charset="utf-8">
  
  <style>
    body, html{ width: 100%; height: 100%; }
    #container { width: 100%; height: 100%; }
  </style>

   <script src="https://code.jquery.com/jquery-3.1.1.min.js" integrity="sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=" crossorigin="anonymous"></script>
  
  <script src="http://webapi.amap.com/maps?v=1.3&key=edfdd288a99d40efce8aeab0e65807ed&callback=initMap"></script>

  <script>
    var map;
    var vehicles = [];
    var infoWindow;
    var canvas1;
    var redPoint, bluePoint, started, freights;

    var icons = {
      g: new AMap.Icon({ image: '/images/car-green-new.png', imageSize: new AMap.Size(24,24) }),
      o: new AMap.Icon({ image: '/images/car-orange-new.png', imageSize: new AMap.Size(36,36) }),
      b: new AMap.Icon({ image: '/images/car-blue.png', imageSize: new AMap.Size(24,24) }),
    };

    function radialGradientPoint(color) {
      var di = 60;
      var c = document.createElement('canvas');
      c.width = c.height = di;
      var ctx = c.getContext('2d');
      var grd = ctx.createRadialGradient(di/2,di/2,0,di/2,di/2,di/2);
      grd.addColorStop(0, color);
      grd.addColorStop(1, "white");
      ctx.fillStyle = grd;
      ctx.beginPath();
      ctx.arc(di/2,di/2,di/2,0,2*Math.PI);
      ctx.fill();
      return c;
    }

    function onRender1() {
      draw();
      if(!started) { autoSize(); started = true; }
    }
    function autoSize() { draw(); setTimeout(autoSize, 250); }
    function draw() {
      var ctx = canvas1.getContext('2d');
      ctx.clearRect(0,0,canvas1.width,canvas1.height);
      freights.forEach(function(elem){
        var p = elem.urgency >= 4 ? redPoint : bluePoint;
        elem.containerPos = map.lngLatToContainer([elem.pos.lng, elem.pos.lag]);
        var r = elem.drawRadius;
        ctx.drawImage(p, elem.containerPos.x - r, elem.containerPos.y - r, r * 2, r * 2);
        elem.drawRadius = (r + 1) % 10;
      });
    }


    function onClickVehicle(e) {
      var v = e.target.getExtData().vInfo;
      var content = v.vid + ' @ ' + v.pos.lng + ' , ' + v.pos.lag;
      infoWindow.setContent(content);
      infoWindow.open(map, e.target.getPosition());
    }

    function initMap() {
      var defaultLayer = new AMap.TileLayer({opacity:0.7});
      map = new AMap.Map('container', {
        center: [114.085947,22.547], // sheng zhen
        zoom: 13,
        zooms: [13, 18],
        layers: [ defaultLayer ]
      });

      map.plugin(["AMap.ToolBar"], function(){
          map.addControl(new AMap.ToolBar());
      });

      infoWindow = new AMap.InfoWindow();

      var marker_depot = new AMap.Marker({
          position: [114.084340, 22.546080],
          title: 'Depot',
          map: map
      });

      redPoint = radialGradientPoint('red');
      bluePoint = radialGradientPoint('rgba(17,0,255,255)');

    }

    function fetchVehicle() {
      $.ajax({
        url: "/vehicle",
        dataType: "json",
      }).done(function(data){
        if(vehicles.length!=data.length) { // init vehicle marker
          vehicles = [];
          data.forEach(function(elem){
            var aMarker = new AMap.Marker({
                position: [elem.pos.lng, elem.pos.lag],
                title: elem.vid,
                draggable: true,
                icon: icons.o,
                extData: {vInfo: elem},
                map: map
            });

            AMap.event.addListener(aMarker, 'click', onClickVehicle);
            vehicles.push(aMarker);
          });
        } else { // update marker
          for(var i=0; i<data.length; i++) {
            vehicles[i].setExtData({vInfo: data[i]});
            vehicles[i].setPosition([data[i].pos.lng, data[i].pos.lag]);
          }
        }
        //console.log(data);
      }).fail(function(xhr, status, error) {
        console.log('fail');
      });
    }

    function fetchFreight() {
      $.ajax({
        url: "/freight/unassigned",
        dataType: "json",
      }).done(function(data){
        //console.log(data);
        freights = data;
        freights.forEach(function(elem){
          elem.containerPos = map.lngLatToContainer([elem.pos.lng, elem.pos.lag]);
          elem.drawRadius = Math.random() * 10;
        });
        if(!canvas1) { // add custom layer
          canvas1 = document.createElement('canvas');
          canvas1.width = map.getSize().width;
          canvas1.height = map.getSize().height;
          var cusLayer1 = new AMap.CustomLayer(canvas1, {zooms:[13,18], zIndex: 12});
          cusLayer1.render = onRender1;
          cusLayer1.setMap(map);
        } else { // update canvas1
        }
      }).fail(function(xhr, status, error) {
        console.log('fail');
      });
    }

    function setAllTimers() {
      setInterval(fetchVehicle, 5000);

      setInterval(fetchFreight, 60000);
    }

    $(document).ready(function(){
      setAllTimers();
    });

  </script>

  </head>
  
  <body>
  
    <div id='container'></div>

  </body>
</html>

